<?php

namespace VL\SiteBundle\Repository;
use Doctrine\ORM\EntityRepository;
use VL\SiteBundle\Entity\Category;

/**
 * CategoryRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CategoryRepository extends EntityRepository
{
    public $em, $categories, $activeArtsCount, $totalArts, $artsPerPage, $lastPage, $previousPage, $nextPage, $glavnaya, $art;

    public function getWithArts()
    {

        $query = $this->getEntityManager()->createQuery(
            'SELECT c FROM VLSiteBundle:Category c LEFT JOIN c.arts');

        $as=$query->getResult();
        return $query->getResult();
    }

    public function searchCategory($slug, $page=0)
    {
        $this->em = $this->getEntityManager();
        $this->categories = $this->getWithArts();

        foreach($this->categories as $category)
        {
            if(($category->getId())==$slug)
            {
                $category->setActiveArts($this->em->getRepository('VLSiteBundle:Art')->getActiveArts(
                    $category->getId(),
                    Category::MAX_ARTS_ON_HOMEPAGE));
                //определение общеего количества статей на сайте опубликованных
                $this->activeArtsCount = $this->em->getRepository('VLSiteBundle:Art')->countActiveArts($category->getId());
                $this->totalArts= $this->activeArtsCount;

                if ($this->activeArtsCount >= Category::MAX_ARTS_ON_HOMEPAGE)
                {
                    $this->activeArtsCount -= Category::MAX_ARTS_ON_HOMEPAGE;
                    $category->setMoreArts($this->activeArtsCount);

                }
                $this->artsPerPage  = Category::MAX_ARTS_ON_HOMEPAGE;
                $this->lastPage     = ceil($this->totalArts / $this->artsPerPage);
                $this->previousPage = $page > 1 ? $page - 1 : 1;
                $this->nextPage     = $page < $this->lastPage ? $page + 1 : $this->lastPage;
                $this->glavnaya=$this->em->getRepository('VLSiteBundle:Art')->getActiveArts($category->getId(),$this->artsPerPage,($page - 1) * $this->artsPerPage);
                break;
            }

        }

        $this->art=$this->glavnaya[0]->getType();

        return $this;
    }



}
