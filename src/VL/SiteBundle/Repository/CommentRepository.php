<?php

namespace VL\SiteBundle\Repository;

use Doctrine\ORM\EntityRepository;

/**
 * CommentRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class CommentRepository extends EntityRepository
{
    public function getComments($name, $email, $site)
    {
        $query = $this->createQueryBuilder('c')
            ->where('c.name = :name')
            ->setParameter('name', $name)
            ->andWhere('c.email =:email')
            ->setParameter('email',$email)
            ->andWhere('c.site_id = :site')
            ->setParameter('site', $site)
            ->orderBy('c.created', 'ASC')
            ->setMaxResults(1)
            ->getQuery();

            $art = $query->getResult();

        return $art;
    }

    public function countCommentArt($site)
    {
        $qb = $this->createQueryBuilder('c')
            ->select('count(c.id)')
            ->Where('c.site_id = :site')
            ->setParameter('site', $site);



        $query = $qb->getQuery();

       return $query->getSingleScalarResult();

    }

public function deleteCommentArt($site)
{
    $query = $this->createQueryBuilder('c')
      //  ->delete()
        ->where('c.site_id = :art_id')
        ->setParameter('art_id', $site)
        ->orderBy('c.created', 'ASC')
        ->getQuery();
    return $query->getResult();
}

public function getAllComments($slug)
{
    $qb = $this->createQueryBuilder('c')

        ->Where('c.site_id = :slug')
        ->setParameter('slug', $slug)
        ->orderBy('c.created', 'DESC');
    $query = $qb->getQuery();

    return $query->getResult();
}

}
















